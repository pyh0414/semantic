name: Semantic Release

on:
  push:
    branches:
      - staging

jobs:
  release:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    permissions:
      contents: read # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    strategy:
      matrix:
        node_version: [16]
        os: [ubuntu-20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install axios

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Slack Notification
        if: always() # Pick up events even if the job fails or is canceled.
        uses: chussum/action-slack-notification@v1
        with:
          status: ${{ job.status }}
          fields: repo,commit # selectable (default: repo,commit,action)
          hash: 2e133437d3f8518b16b5f92d7906fe1e5b4d6b88 # optional, Github commit sha (will be display in fields (default. github ref))
          success_text: Succeeded # optional, Slack message when succeeded.
          failure_text: Failed # optional, Slack message when succeeded.
          canceled_text: Canceled # optional, Slack message when succeeded.
          bot_name: Hello World Bot # legacy optional, Override the legacy integration's default name.
          channel: general # legacy optional, Override the legacy integration's default channel.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
